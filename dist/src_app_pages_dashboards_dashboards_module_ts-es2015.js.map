{"version":3,"sources":["./src/app/pages/dashboards/dashboard.service.ts","./src/app/pages/dashboards/dashboard/dashboard.component.ts","./src/app/pages/dashboards/dashboard/dashboard.component.html","./src/app/pages/dashboards/dashboards-routing.module.ts","./src/app/pages/dashboards/dashboards.module.ts"],"names":[],"mappings":"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","file":"src_app_pages_dashboards_dashboards_module_ts-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { gql } from \"apollo-angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  constructor() {}\n\n  getClientCompanyChart() {\n    return gql`\n      {\n        getClientCompanyChart {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  getClientByRegion() {\n    return gql`\n      {\n        getClientByRegion {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  getIssuesChart() {\n    return gql`\n      {\n        getIssuesChart {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  cardTech() {\n    return gql`\n      {\n        getTicketByProfile {\n          techName\n          totalDiag\n          totalRep\n          moyDiag\n          moyRep\n          techCostRep\n          techCostDiag\n        }\n      }\n    `;\n  }\n\n  getTotality() {\n    return gql`\n      {\n        totality {\n          totality {\n            name\n            value\n          }\n          count\n        }\n      }\n    `;\n  }\n\n  /**\n   * finalPrice\n   * status\n   * \n composants {\n            nameComposant\n            quantity\n            purchasePrice\n            sellPrice\n            statusComposant\n            comingDate\n          }\n   */\n\n  prices() {\n    // for dashboard to get prices\n    return gql`\n      {\n        getTicketForCoordinator {\n          finalPrice\n          status\n          composants {\n            quantity\n            sellPrice\n          }\n        }\n      }\n    `;\n  }\n\n  calendarChart() {\n    return gql`\n      {\n        getClientLastMonth {\n          date\n          value\n        }\n      }\n    `;\n  }\n\n  filterGain(filter) {\n    return gql`\n      mutation {\n        filterGain(filter: { start: \"${filter.start}\", end: \"${\n      filter.end ? filter.end : null\n    }\" }) {\n          createdAt\n        }\n      }\n    `;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo } from \"apollo-angular\";\nimport { DashboardService } from \"../dashboard.service\";\nimport { TicketService } from \"../../ticket/ticket/ticket.service\";\nimport * as echarts from \"echarts\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"ngx-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  options = {\n    backgroundColor: echarts.bg,\n    color: [\n      \"#FF0000\",\n      \"#0000FF\",\n      \"#00FF00\",\n      \"#FFFF00\",\n      \"#FFA500\",\n      \"#800080\",\n      \"#FFC0CB\",\n    ],\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n    },\n\n    series: [\n      {\n        name: \"Countries\",\n        type: \"pie\",\n        radius: \"80%\",\n        center: [\"50%\", \"50%\"],\n        data: [\n          { value: 335, name: \"Germany\" },\n          { value: 310, name: \"France\" },\n          { value: 234, name: \"Canada\" },\n          { value: 135, name: \"Russia\" },\n          { value: 1548, name: \"USA\" },\n        ],\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: echarts.itemHoverShadowColor,\n          },\n        },\n        label: {\n          normal: {\n            textStyle: {\n              color: echarts.textColor,\n            },\n          },\n        },\n        labelLine: {\n          normal: {\n            lineStyle: {\n              color: echarts.axisLineColor,\n            },\n          },\n        },\n      },\n    ],\n  };\n  option: {\n    xAxis: { type: string; data: string[] };\n    yAxis: { type: string };\n    series: { data: number[]; type: string; color: string }[];\n  };\n  techs: any;\n  cellSize = [80, 80];\n  pieRadius = 30;\n\n  issueChart: {\n    backgroundColor: any;\n    color: string[];\n    tooltip: { trigger: string; formatter: string };\n    series: {\n      name: string;\n      type: string;\n      radius: string;\n      center: string[];\n      data: any;\n      itemStyle: {\n        emphasis: {\n          shadowBlur: number;\n          shadowOffsetX: number;\n          shadowColor: any;\n        };\n      };\n      label: { normal: { textStyle: { color: any } } };\n      labelLine: { normal: { lineStyle: { color: any } } };\n    }[];\n  };\n  totalityCard: any;\n  totalTicket: any;\n  ticketFinie: any;\n  ticketEnCours: any;\n  enAttente: any;\n  ticketRetour: any;\n  ticketAnnuler: any;\n  totalPrice: number = 0.0;\n  totalPriceReturn: number = 0.0;\n  totalcomposants: number = 0.0;\n  optionCal: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: {\n      id: string;\n      type: string;\n      coordinateSystem: string;\n      symbolSize: number;\n      label: {\n        show: boolean;\n        formatter: (params: any) => any;\n        offset: number[];\n        fontSize: number;\n      };\n      data: any;\n    }[];\n  };\n  calendarCharts: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: any[];\n  };\n  optionsss: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: (\n      | {\n          type: string;\n          id: string;\n          center: any;\n          radius: number;\n          coordinateSystem: string;\n          label: { formatter: string; position: string };\n          data: { name: any; value: any }[];\n        }\n      | {\n          id: string;\n          type: string;\n          coordinateSystem: string;\n          symbolSize: number;\n          label: {\n            show: boolean;\n          };\n          data: any[];\n        }\n    )[];\n  };\n  optClient: {\n    xAxis: { type: string; data: string[] };\n    yAxis: { type: string };\n    series: {\n      data: number[];\n      type: string;\n      showBackground: boolean;\n      backgroundStyle: { color: string };\n    }[];\n  };\n\n  gainFrom = new FormGroup({\n    filterGain: new FormControl(null, [Validators.required]),\n  });\n  flipped: boolean;\n\n  constructor(\n    private apollo: Apollo,\n    private dashboardService: DashboardService,\n    private ticketService: TicketService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTotality();\n    this.getChart();\n    this.getClientByRegion();\n    this.cardTech();\n    this.getAllTech();\n    this.getIssuesChart();\n    this.price();\n    this.calendarChart();\n    this.filterGainByDate();\n  }\n  toggleView() {\n    this.flipped = !this.flipped;\n  }\n\n  getTotality() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getTotality(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"tot\");\n        this.totalityCard = data.totality;\n        [this.totalTicket] = data.totality.flatMap((el) => {\n          return el.count;\n        });\n\n        this.totalityCard.map((el) => {\n          console.log(el.totality, \"el\");\n          el.totality.map((item) => {\n            if (item.name === \"FINISHED\") {\n              this.ticketFinie = item.value;\n              console.log(item.value, \"test\");\n            }\n            if (item.name === \"PENDING\") {\n              this.enAttente = +item.value;\n            }\n            if (item.name === \"IN_PROGRESS\") {\n              this.ticketEnCours = +item.value;\n            }\n            if (item.name === \"RETURN\") {\n              this.ticketRetour = +item.value;\n            }\n            if (item.name === \"IGNORED\") {\n              this.ticketAnnuler = +item.value;\n            }\n          });\n        });\n      });\n  }\n\n  getChart() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getClientCompanyChart(),\n      })\n      .subscribe(({ data }) => {\n        this.options = {\n          backgroundColor: echarts.bg,\n          color: [\n            \"#00E699\",\n            \"#FFB400\",\n            \"#FF5D76\",\n            \"#00D992\",\n            \"#FFB600\",\n            \"#FF6A7B\",\n            \"#00E28D\",\n            \"#FFAE00\",\n            \"#FF777E\",\n          ],\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n\n          series: [\n            {\n              name: \"Type\",\n              type: \"pie\",\n              radius: \"80%\",\n              center: [\"50%\", \"50%\"],\n              data: data.getClientCompanyChart,\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: echarts.itemHoverShadowColor,\n                },\n              },\n              label: {\n                normal: {\n                  textStyle: {\n                    color: echarts.textColor,\n                  },\n                },\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: echarts.axisLineColor,\n                  },\n                },\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  getAllTech() {\n    this.apollo\n      .query<any>({\n        query: this.ticketService.getAllTech(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data);\n        // this.techs = data.getAllTech;\n      });\n  }\n\n  getClientByRegion() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getClientByRegion(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"data chart\");\n        let names = (this.option = {\n          xAxis: {\n            type: \"category\",\n            data: data.getClientByRegion.map((el) => {\n              return el.name;\n            }),\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: data.getClientByRegion.map((el) => {\n                return el.value;\n              }),\n              type: \"bar\",\n              color: \"#0095ff\",\n            },\n          ],\n        });\n      });\n  }\n\n  getIssuesChart() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getIssuesChart(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"data chart\");\n        this.issueChart = {\n          backgroundColor: echarts.bg,\n          color: [\n            \"#FF5D76\",\n            \"#00D992\",\n            \"#FFB600\",\n            \"#FF6A7B\",\n            \"#00E28D\",\n            \"#FFAE00\",\n            \"#FF777E\",\n          ],\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n\n          series: [\n            {\n              name: \"Type\",\n              type: \"pie\",\n              radius: \"80%\",\n              center: [\"50%\", \"50%\"],\n              data: data.getIssuesChart,\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: echarts.itemHoverShadowColor,\n                },\n              },\n              label: {\n                normal: {\n                  textStyle: {\n                    color: echarts.textColor,\n                  },\n                },\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: echarts.axisLineColor,\n                  },\n                },\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  cardTech() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.cardTech(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"card tech\");\n        this.techs = data.getTicketByProfile;\n      });\n  }\n\n  price() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.prices(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"prices\");\n        data.getTicketForCoordinator.filter((el) => {\n          if (el) {\n            if (el.status === \"FINISHED\") {\n              this.totalPrice += parseFloat(el.finalPrice);\n              console.log(this.totalPrice, \"total in\");\n            }\n            if (el.status === \"RETURN\") {\n              this.totalPriceReturn += parseFloat(el.finalPrice);\n              console.log(this.totalPrice, \"total in\");\n            }\n            el.composants.map((el) => {\n              this.totalcomposants = el.sellPrice * el.quantity;\n              console.log(\"total composants === \", this.totalcomposants);\n            });\n          }\n        });\n      });\n  }\n\n  calendarChart() {\n    const cellSize = [80, 80];\n    const pieRadius = 30;\n\n    const transformedData = [];\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.calendarChart(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data.getClientLastMonth, \"data\");\n        this.optClient = {\n          xAxis: {\n            type: \"category\",\n            data: data.getClientLastMonth.map((el) => {\n              return el.date;\n            }),\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: data.getClientLastMonth.map((el) => {\n                return el.value;\n              }),\n              type: \"bar\",\n              showBackground: true,\n              backgroundStyle: {\n                color: \"rgba(180, 180, 180, 0.2)\",\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  // to filter gains in range of date\n  filterGainByDate() {\n    console.log(\"HELOOOOOOOOOOOOO WORLD\");\n    this.gainFrom.get(\"filterGain\").valueChanges.subscribe((f) => {\n      const startDate = f.start ? new Date(f.start) : null;\n      const endDate = f.end ? new Date(f.end) : null;\n\n      console.log(startDate);\n      console.log(endDate);\n\n      const filter = {\n        start: startDate.toISOString(),\n        end: endDate !== null ? endDate.toISOString() : null,\n      };\n\n      console.log(filter, \"date SKANDER\");\n\n      this.apollo\n        .mutate({\n          mutation: this.dashboardService.filterGain(filter),\n        })\n        .subscribe(({ data }) => {\n          console.log(data, \"filter result\");\n        });\n    });\n  }\n\n  /**\n   *\n   * @param arr contains date as string\n   */\n  arrhandler(arr: string[]) {\n    let arrr = [];\n    arr.map((el) => {\n      arrr.push([el, Math.floor(Math.random() * 10000)]);\n    });\n    return arrr;\n  }\n}\n","<!-- <div class=\"row\">\n  <div class=\"col-lg-12\">\n    <nb-card>\n      <nb-card-header>Statistique des clients</nb-card-header>\n      <nb-card-body>\n        <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div> -->\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-2 card-size custom-border-total\">\n    <h6>Total ticket</h6>\n    <h6>{{ totalTicket }}</h6>\n  </nb-card>\n  <nb-card class=\"col-lg-2 card-size custom-border-pending\"\n    ><h6>En attente</h6>\n    <h6>{{ enAttente ? enAttente : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"info\" class=\"col-lg-2 card-size\"\n    ><h6>En cours</h6>\n    <h6>{{ ticketEnCours ? ticketEnCours : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"success\" class=\"col-lg-2 card-size\"\n    ><h6>Finie</h6>\n    <h6>{{ ticketFinie ? ticketFinie : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"warning\" class=\"col-lg-2 card-size\"\n    ><h6>Retour</h6>\n    <h6>{{ ticketRetour ? ticketRetour : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"danger\" class=\"col-lg-2 card-size\"\n    ><h6>Annuler</h6>\n    <h6>{{ ticketAnnuler ? ticketAnnuler : \"-\" }}</h6></nb-card\n  >\n</div>\n<nb-card class=\"row\">\n  <table class=\"col-lg-12 equal-width-table\">\n    <thead>\n      <tr class=\"header-tech\">\n        <th>Techniciens</th>\n        <th nbTooltip=\"Temps total diagnostique\">Total diagnostique</th>\n        <th nbTooltip=\"Temps total Réparation\">Total réparation</th>\n        <th nbTooltip=\"Temps moyen diagnostique\">Moyen diagnostique</th>\n        <th nbTooltip=\"Temps moyen Réparation\">Moyen reparation</th>\n        <th nbTooltip=\"Prix de heure\">Prix diag</th>\n        <th nbTooltip=\"Prix de heure\">Prix rep</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tech of techs\" class=\"list-tech\">\n        <td class=\"scrollable-cell\">{{ tech.techName }}</td>\n        <td nbTooltip=\"Temps total diagnostique\">{{ tech.totalDiag }}</td>\n        <td nbTooltip=\"Temps total Réparation\">{{ tech.totalRep }}</td>\n        <td nbTooltip=\"Temps moyen diagnostique\">{{ tech.moyDiag }}</td>\n        <td nbTooltip=\"Temps moyen Réparation\">{{ tech.moyRep }}</td>\n        <td nbTooltip=\"Prix de heure\">\n          {{ tech.techCostDiag | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n        </td>\n        <td nbTooltip=\"Prix de heure\">\n          {{ tech.techCostRep | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</nb-card>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-12\">\n    <nb-card-header>Client par region</nb-card-header>\n    <nb-card-body>\n      <div echarts [options]=\"option\" class=\"echart\"></div>\n    </nb-card-body>\n  </nb-card>\n</div>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-8\">\n    <nb-card-header>Statistique des clients</nb-card-header>\n    <nb-card-body>\n      <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n    </nb-card-body>\n  </nb-card>\n\n  <nb-card [formGroup]=\"gainFrom\" class=\"col-lg-4\">\n    <nb-card-header>\n      <div class=\"fix-header-flip\">\n        <input\n          nbInput\n          placeholder=\"Pick Date Range\"\n          [nbDatepicker]=\"formpicker\"\n          fullWidth\n          formControlName=\"filterGain\"\n        />\n        <nb-rangepicker #formpicker></nb-rangepicker>\n        <nb-icon\n          class=\"icon\"\n          icon=\"flip-2-outline\"\n          (click)=\"toggleView()\"\n        ></nb-icon>\n      </div>\n    </nb-card-header>\n\n    <section>\n      <div class=\"subtitle\">Gain total</div>\n      <div class=\"h3\">\n        {{ totalPrice | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"success\"\n        [value]=\"totalPrice / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Gain des demandes d'intervention</div>\n    </section>\n\n    <section>\n      <div class=\"subtitle\">Retour</div>\n      <div class=\"h3\">\n        {{ totalPriceReturn | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"warning\"\n        [value]=\"totalPriceReturn / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Retour des demandes d'intervention</div>\n    </section>\n\n    <section>\n      <div class=\"subtitle\">Total composants</div>\n      <div class=\"h3\">\n        {{ totalcomposants | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"danger\"\n        [value]=\"totalcomposants / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Les demandes d'intervention annulés</div>\n    </section>\n  </nb-card>\n</div>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-6\">\n    <nb-card-header>Panne</nb-card-header>\n    <nb-card-body\n      ><div echarts [options]=\"issueChart\" class=\"demo-chart\"></div\n    ></nb-card-body>\n  </nb-card>\n  <nb-card class=\"col-lg-6\">\n    <nb-card-header>Nombre de client par mois</nb-card-header>\n    <nb-card-body\n      ><div echarts [options]=\"optClient\" class=\"demo-chart\"></div\n    ></nb-card-body>\n  </nb-card>\n</div>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"dashboardGlobal\",\r\n    component: DashboardComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DashboardsRoutingModule } from \"./dashboards-routing.module\";\nimport {\n  NbCardModule,\n  NbDatepickerModule,\n  NbIconModule,\n  NbInputModule,\n  NbListModule,\n  NbProgressBarModule,\n  NbTooltipModule,\n} from \"@nebular/theme\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { NgxEchartsDirective } from \"ngx-echarts/lib/ngx-echarts.directive\";\nimport { ChartModule } from \"angular2-chartjs\";\nimport { ChartsModule } from \"../charts/charts.module\";\nimport { EchartsBarComponent } from \"../charts/echarts/echarts-bar.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardsRoutingModule,\n    NbCardModule,\n    NgxEchartsModule,\n    ChartsModule,\n    NgxEchartsModule,\n    NbProgressBarModule,\n    NbListModule,\n    NbTooltipModule,\n    NbInputModule,\n    NbDatepickerModule,\n    ReactiveFormsModule,\n    NbIconModule,\n  ],\n})\nexport class DashboardsModule {}\n"],"sourceRoot":"webpack:///"}