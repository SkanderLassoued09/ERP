{"version":3,"sources":["webpack:///src/app/pages/dashboards/dashboard.service.ts","webpack:///src/app/pages/dashboards/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboards/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboards/dashboards-routing.module.ts","webpack:///src/app/pages/dashboards/dashboards.module.ts"],"names":["DashboardService","gql","filter","start","end","DashboardComponent","apollo","dashboardService","ticketService","options","backgroundColor","color","tooltip","trigger","formatter","series","name","type","radius","center","data","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","label","normal","textStyle","labelLine","lineStyle","cellSize","pieRadius","totalPrice","totalPriceReturn","totalcomposants","gainFrom","FormGroup","filterGain","FormControl","Validators","getTotality","getChart","getClientByRegion","cardTech","getAllTech","getIssuesChart","price","calendarChart","filterGainByDate","flipped","query","subscribe","console","log","totalityCard","totality","flatMap","el","count","totalTicket","map","item","ticketFinie","enAttente","ticketEnCours","ticketRetour","ticketAnnuler","getClientCompanyChart","names","option","xAxis","yAxis","issueChart","techs","getTicketByProfile","prices","getTicketForCoordinator","status","parseFloat","finalPrice","composants","sellPrice","quantity","transformedData","getClientLastMonth","optClient","date","showBackground","backgroundStyle","get","valueChanges","f","startDate","Date","endDate","toISOString","mutate","mutation","arr","arrr","push","Math","floor","random","toggleView","routes","path","component","DashboardsRoutingModule","RouterModule","DashboardsModule","CommonModule","NbCardModule","NgxEchartsModule","ChartsModule","NbProgressBarModule","NbListModule","NbTooltipModule","NbInputModule","NbDatepickerModule","ReactiveFormsModule","NbIconModule"],"mappings":"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","file":"src_app_pages_dashboards_dashboards_module_ts-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { gql } from \"apollo-angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  constructor() {}\n\n  getClientCompanyChart() {\n    return gql`\n      {\n        getClientCompanyChart {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  getClientByRegion() {\n    return gql`\n      {\n        getClientByRegion {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  getIssuesChart() {\n    return gql`\n      {\n        getIssuesChart {\n          name\n          value\n        }\n      }\n    `;\n  }\n\n  cardTech() {\n    return gql`\n      {\n        getTicketByProfile {\n          techName\n          totalDiag\n          totalRep\n          moyDiag\n          moyRep\n          techCostRep\n          techCostDiag\n        }\n      }\n    `;\n  }\n\n  getTotality() {\n    return gql`\n      {\n        totality {\n          totality {\n            name\n            value\n          }\n          count\n        }\n      }\n    `;\n  }\n\n  /**\n   * finalPrice\n   * status\n   * \n composants {\n            nameComposant\n            quantity\n            purchasePrice\n            sellPrice\n            statusComposant\n            comingDate\n          }\n   */\n\n  prices() {\n    // for dashboard to get prices\n    return gql`\n      {\n        getTicketForCoordinator {\n          finalPrice\n          status\n          composants {\n            quantity\n            sellPrice\n          }\n        }\n      }\n    `;\n  }\n\n  calendarChart() {\n    return gql`\n      {\n        getClientLastMonth {\n          date\n          value\n        }\n      }\n    `;\n  }\n\n  filterGain(filter) {\n    return gql`\n      mutation {\n        filterGain(filter: { start: \"${filter.start}\", end: \"${\n      filter.end ? filter.end : null\n    }\" }) {\n          createdAt\n        }\n      }\n    `;\n  }\n}\n","<!-- <div class=\"row\">\n  <div class=\"col-lg-12\">\n    <nb-card>\n      <nb-card-header>Statistique des clients</nb-card-header>\n      <nb-card-body>\n        <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div> -->\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-2 card-size custom-border-total\">\n    <h6>Total ticket</h6>\n    <h6>{{ totalTicket }}</h6>\n  </nb-card>\n  <nb-card class=\"col-lg-2 card-size custom-border-pending\"\n    ><h6>En attente</h6>\n    <h6>{{ enAttente ? enAttente : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"info\" class=\"col-lg-2 card-size\"\n    ><h6>En cours</h6>\n    <h6>{{ ticketEnCours ? ticketEnCours : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"success\" class=\"col-lg-2 card-size\"\n    ><h6>Finie</h6>\n    <h6>{{ ticketFinie ? ticketFinie : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"warning\" class=\"col-lg-2 card-size\"\n    ><h6>Retour</h6>\n    <h6>{{ ticketRetour ? ticketRetour : \"-\" }}</h6></nb-card\n  >\n  <nb-card accent=\"danger\" class=\"col-lg-2 card-size\"\n    ><h6>Annuler</h6>\n    <h6>{{ ticketAnnuler ? ticketAnnuler : \"-\" }}</h6></nb-card\n  >\n</div>\n<nb-card class=\"row\">\n  <table class=\"col-lg-12 equal-width-table\">\n    <thead>\n      <tr class=\"header-tech\">\n        <th>Techniciens</th>\n        <th nbTooltip=\"Temps total diagnostique\">Total diagnostique</th>\n        <th nbTooltip=\"Temps total Réparation\">Total réparation</th>\n        <th nbTooltip=\"Temps moyen diagnostique\">Moyen diagnostique</th>\n        <th nbTooltip=\"Temps moyen Réparation\">Moyen reparation</th>\n        <th nbTooltip=\"Prix de heure\">Prix diag</th>\n        <th nbTooltip=\"Prix de heure\">Prix rep</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tech of techs\" class=\"list-tech\">\n        <td class=\"scrollable-cell\">{{ tech.techName }}</td>\n        <td nbTooltip=\"Temps total diagnostique\">{{ tech.totalDiag }}</td>\n        <td nbTooltip=\"Temps total Réparation\">{{ tech.totalRep }}</td>\n        <td nbTooltip=\"Temps moyen diagnostique\">{{ tech.moyDiag }}</td>\n        <td nbTooltip=\"Temps moyen Réparation\">{{ tech.moyRep }}</td>\n        <td nbTooltip=\"Prix de heure\">\n          {{ tech.techCostDiag | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n        </td>\n        <td nbTooltip=\"Prix de heure\">\n          {{ tech.techCostRep | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</nb-card>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-12\">\n    <nb-card-header>Client par region</nb-card-header>\n    <nb-card-body>\n      <div echarts [options]=\"option\" class=\"echart\"></div>\n    </nb-card-body>\n  </nb-card>\n</div>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-8\">\n    <nb-card-header>Statistique des clients</nb-card-header>\n    <nb-card-body>\n      <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n    </nb-card-body>\n  </nb-card>\n\n  <nb-card [formGroup]=\"gainFrom\" class=\"col-lg-4\">\n    <nb-card-header>\n      <div class=\"fix-header-flip\">\n        <input\n          nbInput\n          placeholder=\"Pick Date Range\"\n          [nbDatepicker]=\"formpicker\"\n          fullWidth\n          formControlName=\"filterGain\"\n        />\n        <nb-rangepicker #formpicker></nb-rangepicker>\n        <nb-icon\n          class=\"icon\"\n          icon=\"flip-2-outline\"\n          (click)=\"toggleView()\"\n        ></nb-icon>\n      </div>\n    </nb-card-header>\n\n    <section>\n      <div class=\"subtitle\">Gain total</div>\n      <div class=\"h3\">\n        {{ totalPrice | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"success\"\n        [value]=\"totalPrice / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Gain des demandes d'intervention</div>\n    </section>\n\n    <section>\n      <div class=\"subtitle\">Retour</div>\n      <div class=\"h3\">\n        {{ totalPriceReturn | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"warning\"\n        [value]=\"totalPriceReturn / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Retour des demandes d'intervention</div>\n    </section>\n\n    <section>\n      <div class=\"subtitle\">Total composants</div>\n      <div class=\"h3\">\n        {{ totalcomposants | currency : \"TND\" : \"symbol\" : \"1.2-2\" }}\n      </div>\n\n      <nb-progress-bar\n        status=\"danger\"\n        [value]=\"totalcomposants / 100\"\n      ></nb-progress-bar>\n      <div class=\"caption description\">Les demandes d'intervention annulés</div>\n    </section>\n  </nb-card>\n</div>\n\n<div class=\"row\">\n  <nb-card class=\"col-lg-6\">\n    <nb-card-header>Panne</nb-card-header>\n    <nb-card-body\n      ><div echarts [options]=\"issueChart\" class=\"demo-chart\"></div\n    ></nb-card-body>\n  </nb-card>\n  <nb-card class=\"col-lg-6\">\n    <nb-card-header>Nombre de client par mois</nb-card-header>\n    <nb-card-body\n      ><div echarts [options]=\"optClient\" class=\"demo-chart\"></div\n    ></nb-card-body>\n  </nb-card>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo } from \"apollo-angular\";\nimport { DashboardService } from \"../dashboard.service\";\nimport { TicketService } from \"../../ticket/ticket/ticket.service\";\nimport * as echarts from \"echarts\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"ngx-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  options = {\n    backgroundColor: echarts.bg,\n    color: [\n      \"#FF0000\",\n      \"#0000FF\",\n      \"#00FF00\",\n      \"#FFFF00\",\n      \"#FFA500\",\n      \"#800080\",\n      \"#FFC0CB\",\n    ],\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n    },\n\n    series: [\n      {\n        name: \"Countries\",\n        type: \"pie\",\n        radius: \"80%\",\n        center: [\"50%\", \"50%\"],\n        data: [\n          { value: 335, name: \"Germany\" },\n          { value: 310, name: \"France\" },\n          { value: 234, name: \"Canada\" },\n          { value: 135, name: \"Russia\" },\n          { value: 1548, name: \"USA\" },\n        ],\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: echarts.itemHoverShadowColor,\n          },\n        },\n        label: {\n          normal: {\n            textStyle: {\n              color: echarts.textColor,\n            },\n          },\n        },\n        labelLine: {\n          normal: {\n            lineStyle: {\n              color: echarts.axisLineColor,\n            },\n          },\n        },\n      },\n    ],\n  };\n  option: {\n    xAxis: { type: string; data: string[] };\n    yAxis: { type: string };\n    series: { data: number[]; type: string; color: string }[];\n  };\n  techs: any;\n  cellSize = [80, 80];\n  pieRadius = 30;\n\n  issueChart: {\n    backgroundColor: any;\n    color: string[];\n    tooltip: { trigger: string; formatter: string };\n    series: {\n      name: string;\n      type: string;\n      radius: string;\n      center: string[];\n      data: any;\n      itemStyle: {\n        emphasis: {\n          shadowBlur: number;\n          shadowOffsetX: number;\n          shadowColor: any;\n        };\n      };\n      label: { normal: { textStyle: { color: any } } };\n      labelLine: { normal: { lineStyle: { color: any } } };\n    }[];\n  };\n  totalityCard: any;\n  totalTicket: any;\n  ticketFinie: any;\n  ticketEnCours: any;\n  enAttente: any;\n  ticketRetour: any;\n  ticketAnnuler: any;\n  totalPrice: number = 0.0;\n  totalPriceReturn: number = 0.0;\n  totalcomposants: number = 0.0;\n  optionCal: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: {\n      id: string;\n      type: string;\n      coordinateSystem: string;\n      symbolSize: number;\n      label: {\n        show: boolean;\n        formatter: (params: any) => any;\n        offset: number[];\n        fontSize: number;\n      };\n      data: any;\n    }[];\n  };\n  calendarCharts: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: any[];\n  };\n  optionsss: {\n    tooltip: {};\n    legend: { data: string[]; bottom: number };\n    calendar: {\n      top: string;\n      left: string;\n      orient: string;\n      cellSize: number[];\n      yearLabel: { show: boolean; fontSize: number };\n      dayLabel: { margin: number; firstDay: number; nameMap: string[] };\n      monthLabel: { show: boolean };\n      range: string[];\n    };\n    series: (\n      | {\n          type: string;\n          id: string;\n          center: any;\n          radius: number;\n          coordinateSystem: string;\n          label: { formatter: string; position: string };\n          data: { name: any; value: any }[];\n        }\n      | {\n          id: string;\n          type: string;\n          coordinateSystem: string;\n          symbolSize: number;\n          label: {\n            show: boolean;\n          };\n          data: any[];\n        }\n    )[];\n  };\n  optClient: {\n    xAxis: { type: string; data: string[] };\n    yAxis: { type: string };\n    series: {\n      data: number[];\n      type: string;\n      showBackground: boolean;\n      backgroundStyle: { color: string };\n    }[];\n  };\n\n  gainFrom = new FormGroup({\n    filterGain: new FormControl(null, [Validators.required]),\n  });\n  flipped: boolean;\n\n  constructor(\n    private apollo: Apollo,\n    private dashboardService: DashboardService,\n    private ticketService: TicketService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTotality();\n    this.getChart();\n    this.getClientByRegion();\n    this.cardTech();\n    this.getAllTech();\n    this.getIssuesChart();\n    this.price();\n    this.calendarChart();\n    this.filterGainByDate();\n  }\n  toggleView() {\n    this.flipped = !this.flipped;\n  }\n\n  getTotality() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getTotality(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"tot\");\n        this.totalityCard = data.totality;\n        [this.totalTicket] = data.totality.flatMap((el) => {\n          return el.count;\n        });\n\n        this.totalityCard.map((el) => {\n          console.log(el.totality, \"el\");\n          el.totality.map((item) => {\n            if (item.name === \"FINISHED\") {\n              this.ticketFinie = item.value;\n              console.log(item.value, \"test\");\n            }\n            if (item.name === \"PENDING\") {\n              this.enAttente = +item.value;\n            }\n            if (item.name === \"IN_PROGRESS\") {\n              this.ticketEnCours = +item.value;\n            }\n            if (item.name === \"RETURN\") {\n              this.ticketRetour = +item.value;\n            }\n            if (item.name === \"IGNORED\") {\n              this.ticketAnnuler = +item.value;\n            }\n          });\n        });\n      });\n  }\n\n  getChart() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getClientCompanyChart(),\n      })\n      .subscribe(({ data }) => {\n        this.options = {\n          backgroundColor: echarts.bg,\n          color: [\n            \"#00E699\",\n            \"#FFB400\",\n            \"#FF5D76\",\n            \"#00D992\",\n            \"#FFB600\",\n            \"#FF6A7B\",\n            \"#00E28D\",\n            \"#FFAE00\",\n            \"#FF777E\",\n          ],\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n\n          series: [\n            {\n              name: \"Type\",\n              type: \"pie\",\n              radius: \"80%\",\n              center: [\"50%\", \"50%\"],\n              data: data.getClientCompanyChart,\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: echarts.itemHoverShadowColor,\n                },\n              },\n              label: {\n                normal: {\n                  textStyle: {\n                    color: echarts.textColor,\n                  },\n                },\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: echarts.axisLineColor,\n                  },\n                },\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  getAllTech() {\n    this.apollo\n      .query<any>({\n        query: this.ticketService.getAllTech(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data);\n        // this.techs = data.getAllTech;\n      });\n  }\n\n  getClientByRegion() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getClientByRegion(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"data chart\");\n        let names = (this.option = {\n          xAxis: {\n            type: \"category\",\n            data: data.getClientByRegion.map((el) => {\n              return el.name;\n            }),\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: data.getClientByRegion.map((el) => {\n                return el.value;\n              }),\n              type: \"bar\",\n              color: \"#0095ff\",\n            },\n          ],\n        });\n      });\n  }\n\n  getIssuesChart() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.getIssuesChart(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"data chart\");\n        this.issueChart = {\n          backgroundColor: echarts.bg,\n          color: [\n            \"#FF5D76\",\n            \"#00D992\",\n            \"#FFB600\",\n            \"#FF6A7B\",\n            \"#00E28D\",\n            \"#FFAE00\",\n            \"#FF777E\",\n          ],\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n\n          series: [\n            {\n              name: \"Type\",\n              type: \"pie\",\n              radius: \"80%\",\n              center: [\"50%\", \"50%\"],\n              data: data.getIssuesChart,\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: echarts.itemHoverShadowColor,\n                },\n              },\n              label: {\n                normal: {\n                  textStyle: {\n                    color: echarts.textColor,\n                  },\n                },\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: echarts.axisLineColor,\n                  },\n                },\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  cardTech() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.cardTech(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"card tech\");\n        this.techs = data.getTicketByProfile;\n      });\n  }\n\n  price() {\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.prices(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"prices\");\n        data.getTicketForCoordinator.filter((el) => {\n          if (el) {\n            if (el.status === \"FINISHED\") {\n              this.totalPrice += parseFloat(el.finalPrice);\n              console.log(this.totalPrice, \"total in\");\n            }\n            if (el.status === \"RETURN\") {\n              this.totalPriceReturn += parseFloat(el.finalPrice);\n              console.log(this.totalPrice, \"total in\");\n            }\n            el.composants.map((el) => {\n              this.totalcomposants = el.sellPrice * el.quantity;\n              console.log(\"total composants === \", this.totalcomposants);\n            });\n          }\n        });\n      });\n  }\n\n  calendarChart() {\n    const cellSize = [80, 80];\n    const pieRadius = 30;\n\n    const transformedData = [];\n    this.apollo\n      .query<any>({\n        query: this.dashboardService.calendarChart(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data.getClientLastMonth, \"data\");\n        this.optClient = {\n          xAxis: {\n            type: \"category\",\n            data: data.getClientLastMonth.map((el) => {\n              return el.date;\n            }),\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: data.getClientLastMonth.map((el) => {\n                return el.value;\n              }),\n              type: \"bar\",\n              showBackground: true,\n              backgroundStyle: {\n                color: \"rgba(180, 180, 180, 0.2)\",\n              },\n            },\n          ],\n        };\n      });\n  }\n\n  // to filter gains in range of date\n  filterGainByDate() {\n    console.log(\"HELOOOOOOOOOOOOO WORLD\");\n    this.gainFrom.get(\"filterGain\").valueChanges.subscribe((f) => {\n      const startDate = f.start ? new Date(f.start) : null;\n      const endDate = f.end ? new Date(f.end) : null;\n\n      console.log(startDate);\n      console.log(endDate);\n\n      const filter = {\n        start: startDate.toISOString(),\n        end: endDate !== null ? endDate.toISOString() : null,\n      };\n\n      console.log(filter, \"date SKANDER\");\n\n      this.apollo\n        .mutate({\n          mutation: this.dashboardService.filterGain(filter),\n        })\n        .subscribe(({ data }) => {\n          console.log(data, \"filter result\");\n        });\n    });\n  }\n\n  /**\n   *\n   * @param arr contains date as string\n   */\n  arrhandler(arr: string[]) {\n    let arrr = [];\n    arr.map((el) => {\n      arrr.push([el, Math.floor(Math.random() * 10000)]);\n    });\n    return arrr;\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"dashboardGlobal\",\r\n    component: DashboardComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DashboardsRoutingModule } from \"./dashboards-routing.module\";\nimport {\n  NbCardModule,\n  NbDatepickerModule,\n  NbIconModule,\n  NbInputModule,\n  NbListModule,\n  NbProgressBarModule,\n  NbTooltipModule,\n} from \"@nebular/theme\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { NgxEchartsDirective } from \"ngx-echarts/lib/ngx-echarts.directive\";\nimport { ChartModule } from \"angular2-chartjs\";\nimport { ChartsModule } from \"../charts/charts.module\";\nimport { EchartsBarComponent } from \"../charts/echarts/echarts-bar.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardsRoutingModule,\n    NbCardModule,\n    NgxEchartsModule,\n    ChartsModule,\n    NgxEchartsModule,\n    NbProgressBarModule,\n    NbListModule,\n    NbTooltipModule,\n    NbInputModule,\n    NbDatepickerModule,\n    ReactiveFormsModule,\n    NbIconModule,\n  ],\n})\nexport class DashboardsModule {}\n"]}