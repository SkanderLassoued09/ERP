{"version":3,"sources":["./src/app/pages/profile/add-profile/add-profile.component.ts","./src/app/pages/profile/add-profile/add-profile.component.html","./src/app/pages/profile/profile.module.ts","./src/app/pages/profile/profile.routing.module.ts","./src/app/pages/profile/profile/profile.component.ts","./src/app/pages/profile/profile/profile.component.html"],"names":[],"mappings":"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","file":"src_app_pages_profile_profile_module_ts-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ProfileService } from \"../profile.service\";\nimport { Apollo } from \"apollo-angular\";\nimport { NbDialogService, NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationModalComponent } from \"../../../share-data/confirmation-modal/confirmation-modal.component\";\n\n@Component({\n  selector: \"ngx-add-profile\",\n  templateUrl: \"./add-profile.component.html\",\n  styleUrls: [\"./add-profile.component.scss\"],\n})\nexport class AddProfileComponent implements OnInit {\n  addProfile = new FormGroup({\n    username: new FormControl(\"\", [Validators.required]),\n    firstName: new FormControl(\"\", [Validators.required]),\n    lastName: new FormControl(\"\", [Validators.required]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    phone: new FormControl(\"\", [Validators.required]),\n    password: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n    address: new FormControl(\"\", [Validators.required]),\n    role: new FormControl(\"\", [Validators.required]),\n  });\n\n  roles = [\n    \"ADMIN_MANAGER\",\n    \"ADMIN_TECH\",\n    \"MANAGER\",\n    \"MAGASIN\",\n    \"TECH\",\n    \"COORDINATOR\",\n  ];\n\n  constructor(\n    private profileService: ProfileService,\n    private apollo: Apollo,\n    private nbToastr: NbToastrService,\n    private nbDialog: NbDialogService\n  ) {}\n\n  ngOnInit(): void {}\n\n  saveProfile() {\n    this.nbDialog\n      .open(ConfirmationModalComponent, {\n        context: { data: \"êtes-vous sûr ?\" },\n      })\n      .onClose.subscribe((cl) => {\n        if (cl) {\n          console.log(this.addProfile.value, \"form\");\n          this.apollo\n            .mutate<any>({\n              mutation: this.profileService.addProfile(this.addProfile.value),\n            })\n            .subscribe(({ data }) => {\n              console.log(data, \"profile added\");\n              if (data) {\n                this.nbToastr.success(\"\", \"Profile added\");\n                this.addProfile.reset();\n              }\n            });\n        } else {\n          this.nbToastr.warning(\"\", \"Annulé\");\n          this.addProfile.reset();\n        }\n      });\n  }\n}\n","<nb-card>\n  <nb-card-header>Ajouter STAFF</nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"addProfile\">\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Nom d'utilisateur</label>\n          <input nbInput fullWidth formControlName=\"username\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Prénom</label>\n          <input nbInput fullWidth formControlName=\"firstName\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Nom</label>\n          <input nbInput fullWidth formControlName=\"lastName\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\">E-mail</label>\n          <input nbInput fullWidth formControlName=\"email\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Téléphone</label>\n          <input nbInput fullWidth formControlName=\"phone\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Mot de passe</label>\n          <input nbInput type=\"password\" fullWidth formControlName=\"password\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Adresse</label>\n          <input nbInput fullWidth formControlName=\"address\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\">Role</label>\n          <nb-select fullWidth formControlName=\"role\">\n            <nb-option *ngFor=\"let r of roles\" [value]=\"r\">\n              {{ r }}\n            </nb-option>\n          </nb-select>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"justify-btn\">\n          <button\n            nbButton\n            status=\"success\"\n            [disabled]=\"addProfile.invalid\"\n            (click)=\"saveProfile()\"\n          >\n            Valider\n          </button>\n          <button nbButton status=\"danger\" (click)=\"addProfile.reset()\">\n            Vider les champs\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { AddProfileComponent } from \"./add-profile/add-profile.component\";\nimport { ProfileRoutingModule } from \"./profile.routing.module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  NbSelectModule,\n  NbCardModule,\n  NbInputModule,\n  NbRadioModule,\n  NbButtonModule,\n  NbIconModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\n\n@NgModule({\n  declarations: [ProfileComponent, AddProfileComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    NbSelectModule,\n    CommonModule,\n\n    NbCardModule,\n    NbInputModule,\n    NbIconModule,\n    ReactiveFormsModule,\n    NbRadioModule,\n    NbButtonModule,\n    Ng2SmartTableModule,\n  ],\n})\nexport class ProfileModule {}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AddProfileComponent } from \"./add-profile/add-profile.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"add-profile\",\r\n    component: AddProfileComponent,\r\n  },\r\n  {\r\n    path: \"list-profile\",\r\n    component: ProfileComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfileRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo } from \"apollo-angular\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { ProfileService } from \"../profile.service\";\nimport { DatePipe } from \"@angular/common\";\nimport { NbTokenService } from \"@nebular/auth\";\nimport { NbDialogService, NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationModalComponent } from \"../../../share-data/confirmation-modal/confirmation-modal.component\";\n\n@Component({\n  selector: \"ngx-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit {\n  settings = {\n    actions: {\n      add: false,\n      edit: true,\n      delete: true,\n      // custom: [\n      //   {\n      //     name: \"passValue\",\n      //     title: `<i class=\"nb-compose\" title=\"details\"></i>`,\n      //   },\n      // ],\n    },\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"  title=\"Modifier\" ></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmSave: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"  title=\"Desactiver\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      username: {\n        title: \"Nom d'utilisateur\",\n        type: \"string\",\n        editable: false,\n      },\n\n      firstName: {\n        title: \"Prénom\",\n        type: \"string\",\n      },\n      lastName: {\n        title: \"Nom\",\n        type: \"string\",\n      },\n      role: {\n        title: \"Rôle\",\n        type: \"string\",\n        editable: false,\n      },\n      email: {\n        title: \"E-mail\",\n        type: \"string\",\n        editable: false,\n      },\n      phone: {\n        title: \"Téléphone\",\n        type: \"string\",\n      },\n\n      createdAt: {\n        title: \"Créé le\",\n        type: \"string\",\n        valuePrepareFunction: (date) => {\n          var raw = new Date(date);\n\n          var formatted = this.datePipe.transform(raw, \"dd MMM yyyy hh:mm:ss\");\n          return formatted;\n        },\n        editable: false,\n      },\n\n      updatedAt: {\n        title: \"Dérniere modification\",\n        type: \"string\",\n        valuePrepareFunction: (date) => {\n          var raw = new Date(date);\n\n          var formatted = this.datePipe.transform(raw, \"dd MMM yyyy hh:mm:ss\");\n          return formatted;\n        },\n        editable: false,\n      },\n    },\n  };\n\n  profileList: LocalDataSource;\n\n  constructor(\n    private profileService: ProfileService,\n    private apollo: Apollo,\n    private datePipe: DatePipe,\n    private nbToastr: NbToastrService,\n    private nbDialog: NbDialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.listOfProfile();\n  }\n\n  listOfProfile() {\n    this.apollo\n      .query<any>({\n        query: this.profileService.getListProfile(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data, \"data\");\n\n        this.profileList = new LocalDataSource(data.getAllProfiles);\n      });\n  }\n  delete(event) {\n    this.nbDialog\n      .open(ConfirmationModalComponent, {\n        context: { data: \"Vous-êtes sûr de supprimer ?\" },\n      })\n      .onClose.subscribe((cl) => {\n        if (cl) {\n          console.log(\"hello\", event.data._id);\n          this.apollo\n            .mutate<any>({\n              mutation: this.profileService.deleteProfile(event.data._id),\n            })\n            .subscribe(({ data }) => {\n              console.log(data, \"delete\");\n              if (data) {\n                this.nbToastr.danger(\"\", \"Profil supprimé\");\n                event.confirm.resolve();\n              }\n            });\n        } else {\n          this.nbToastr.danger(\"\", \"Annulé\");\n        }\n      });\n  }\n  edit(event) {\n    this.nbDialog\n      .open(ConfirmationModalComponent, {\n        context: { data: \"êtes-vous sûr de modifier ?\" },\n      })\n      .onClose.subscribe((cl) => {\n        if (cl) {\n          this.apollo\n            .mutate<any>({\n              mutation: this.profileService.updateProfile(\n                event.newData._id,\n                event.newData.firstName,\n                event.newData.lastName,\n                event.newData.phone\n              ),\n            })\n            .subscribe(({ data }) => {\n              console.log(data, \"updated\");\n              if (data) {\n                this.nbToastr.info(\"\", \"Profil mis à jour\");\n                event.confirm.resolve(event.newdata);\n              }\n            });\n        } else {\n          this.nbToastr.danger(\"\", \"Annulé\");\n        }\n      });\n    console.log(\"hello\", event);\n  }\n}\n","<nb-card>\n  <nb-card-header></nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table\n      class=\"order-table\"\n      [settings]=\"settings\"\n      [source]=\"profileList\"\n      (deleteConfirm)=\"delete($event)\"\n      (editConfirm)=\"edit($event)\"\n    ></ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}