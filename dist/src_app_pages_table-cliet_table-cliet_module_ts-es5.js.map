{"version":3,"sources":["webpack:///src/app/pages/table-cliet/add-client/add-client.component.html","webpack:///src/app/pages/table-cliet/add-client/add-client.component.ts","webpack:///src/app/pages/table-cliet/add-company/add-company.component.html","webpack:///src/app/pages/table-cliet/add-company/add-company.component.ts","webpack:///src/app/pages/table-cliet/choices/choices.component.ts","webpack:///src/app/pages/table-cliet/choices/choices.component.html","webpack:///src/app/pages/table-cliet/company-list/company-list.component.ts","webpack:///src/app/pages/table-cliet/company-list/company-list.component.html","webpack:///src/app/pages/table-cliet/table-client-routing.module.ts","webpack:///src/app/pages/table-cliet/table-client/table-client.component.ts","webpack:///src/app/pages/table-cliet/table-client/table-client.component.html","webpack:///src/app/pages/table-cliet/table-cliet.module.ts"],"names":["addUser","AddClientComponent","apollo","clientService","route","toastr","router","nbDialog","FormGroup","firstName","FormControl","Validators","lastName","address","phone","email","region","codePostal","regions","typeUser","snapshot","params","type","console","log","open","ConfirmationModalComponent","context","data","onClose","subscribe","cl","value","mutate","mutation","addClient","reset","success","navigate","warning","AddCompanyComponent","addCompany","companyName","tva","localOrshore","etat","fax","website","conPayment","techContact","codeFiscal","nattestation","swiftBic","ibanRib","achat","fullName","financier","technique","nRegisterCommerce","toHideAchat","toHideFinancier","toHideTechnique","danger","hideShowFormAchat","hideShowFormFinancier","hideShowFormTechnique","createCompany","ChoicesComponent","onCreateNewClient","onCreateNewSociete","CompanyListComponent","settings","actions","add","edit","custom","name","title","addButtonContent","createButtonContent","cancelButtonContent","editButtonContent","saveButtonContent","confirmSave","deleteButtonContent","confirmDelete","columns","_id","getCompany","query","listOfCompany","LocalDataSource","getAllCompany","routes","path","component","TableClientComponent","ClientRoutingModule","RouterModule","getClientCompany","getClient","listOfClient","getAllClient","TableClietModule","CommonModule","NbCardModule","NbInputModule","ReactiveFormsModule","NbRadioModule","NbButtonModule","Ng2SmartTableModule","NbIconModule","NbSelectModule"],"mappings":"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","file":"src_app_pages_table-cliet_table-cliet_module_ts-es5.js","sourcesContent":["<nb-card *ngIf=\"typeUser === 'CLIENT'\">\n  <nb-card-header>Creation de client</nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"addUser\">\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Nom</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"lastName\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Prenom</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"firstName\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">E-mail</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"email\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Numero de telephone</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"phone\" />\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Adresse</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"address\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Région</label>\n          <nb-select formControlName=\"region\" fullWidth>\n            <nb-option *ngFor=\"let r of regions\" [value]=\"r\">\n              {{ r }}\n            </nb-option>\n          </nb-select>\n        </div>\n        <div class=\"col-lg-6\">\n          <label class=\"label\" for=\"\">Code postale</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"codePostal\" />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"justify-btn\">\n          <button\n            status=\"success\"\n            [disabled]=\"addUser.invalid\"\n            (click)=\"createUser()\"\n            nbButton\n          >\n            Ajouter\n          </button>\n          <button status=\"danger\" (click)=\"addUser.reset()\" nbButton>\n            Vider\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo } from \"apollo-angular\";\nimport { TableClientService } from \"../table-client.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NbDialogService, NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationModalComponent } from \"../../../share-data/confirmation-modal/confirmation-modal.component\";\n\n@Component({\n  selector: \"ngx-add-client\",\n  templateUrl: \"./add-client.component.html\",\n  styleUrls: [\"./add-client.component.scss\"],\n})\nexport class AddClientComponent implements OnInit {\n  addUser = new FormGroup({\n    firstName: new FormControl(\"\", [Validators.required]),\n    lastName: new FormControl(\"\", [Validators.required]),\n    address: new FormControl(\"\", [Validators.required]),\n    phone: new FormControl(\"\", [Validators.required]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    region: new FormControl(\"\", [Validators.required]),\n    codePostal: new FormControl(\"\", [Validators.required]),\n  });\n  typeUser: any;\n\n  regions = [\n    \"Ariana\",\n    \"Béja\",\n    \"Ben Arous\",\n    \"Bizerte\",\n    \"Gabès\",\n    \"Gafsa\",\n    \"Jendouba\",\n    \"Kairaouan\",\n    \"Kasserine\",\n    \"Kebili\",\n    \"Kef\",\n    \"Mahdia\",\n    \"Manouba\",\n    \"Mednine\",\n    \"Monastir\",\n    \"Nabeul\",\n    \"Sfax\",\n    \"Sidi Bouzid\",\n    \"Siliana\",\n    \"Sousse\",\n    \"Tataouine\",\n    \"Tozeur\",\n    \"Tunis\",\n    \"Zaghouan\",\n  ];\n\n  constructor(\n    private apollo: Apollo,\n    private clientService: TableClientService,\n    private route: ActivatedRoute,\n    private toastr: NbToastrService,\n    private router: Router,\n    private nbDialog: NbDialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.typeUser = this.route.snapshot.params.type;\n    console.log(this.typeUser, \"data\");\n  }\n\n  createUser() {\n    this.nbDialog\n      .open(ConfirmationModalComponent, {\n        context: { data: \"êtes-vous sûr de ajouter ce client\" },\n      })\n      .onClose.subscribe((cl) => {\n        if (cl) {\n          console.log(this.addUser.value, \"data\");\n          this.apollo\n            .mutate<any>({\n              mutation: this.clientService.addClient(\n                this.addUser.value,\n                this.typeUser\n              ),\n            })\n            .subscribe(({ data }) => {\n              if (data) {\n                this.addUser.reset();\n                this.toastr.success(\"\", \"Vous avez ajouter nouveau client\");\n                this.router.navigate([\"pages/tableClient/table-user\"]);\n              }\n            });\n        } else {\n          this.toastr.warning(\"\", \"Annulé\");\n        }\n      });\n  }\n}\n","<nb-card>\n  <nb-card-header>Creation de client</nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"addCompany\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Nom de l'entreprise</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"companyName\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Numéro de TVA</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"tva\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <!-- <label class=\"label\" for=\"\">Nom de l'entreprise</label> -->\n          <nb-radio-group class=\"justify-radio\" formControlName=\"localOrshore\">\n            <nb-radio value=\"local\"> Locale </nb-radio>\n            <nb-radio value=\"offshore\"> Offshore </nb-radio>\n          </nb-radio-group>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Adresse</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"address\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Région</label>\n          <nb-select formControlName=\"region\" fullWidth>\n            <nb-option *ngFor=\"let r of regions\" [value]=\"r\">\n              {{ r }}\n            </nb-option>\n          </nb-select>\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Code postale</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"codePostal\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Etat</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"etat\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Numero de telephone</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"phone\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Numero de fax</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"fax\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">E-mail</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"email\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Website</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"website\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Condition de paiement</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"conPayment\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">SWIFT / BIC</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"swiftBic\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Iban code / RIB</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"ibanRib\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Technical contact</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"techContact\" />\n        </div>\n        <p class=\"caption status-danger\">\n          Only for tunisian partner / uniquement pour les client - fournisseur\n          tunisiens:\n        </p>\n\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Code fiscal</label>\n          <input nbInput type=\"text\" fullWidth formControlName=\"codeFiscal\" />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\">Numéro de register de commerce</label>\n          <input\n            nbInput\n            type=\"text\"\n            fullWidth\n            formControlName=\"nRegisterCommerce\"\n          />\n        </div>\n        <div class=\"col-lg-12\">\n          <label class=\"label\" for=\"\"\n            >Numero de l'attestation d'exonération</label\n          >\n          <input nbInput type=\"text\" fullWidth formControlName=\"nattestation\" />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"achat\" *ngIf=\"toHideAchat\" formGroupName=\"achat\">\n            <label for=\"\" class=\"label\"> Service Achat</label>\n            <div class=\"input\">\n              <input formControlName=\"fullName\" nbInput type=\"text\" />\n              <input formControlName=\"email\" nbInput type=\"text\" />\n              <input formControlName=\"phone\" nbInput type=\"text\" />\n            </div>\n          </div>\n\n          <div\n            class=\"financier\"\n            *ngIf=\"toHideFinancier\"\n            formGroupName=\"financier\"\n          >\n            <label for=\"\" class=\"label\">Service Financier</label>\n            <div class=\"input\">\n              <input formControlName=\"fullName\" nbInput type=\"text\" />\n              <input formControlName=\"email\" nbInput type=\"text\" />\n              <input formControlName=\"phone\" nbInput type=\"text\" />\n            </div>\n          </div>\n\n          <div\n            class=\"technique\"\n            *ngIf=\"toHideTechnique\"\n            formGroupName=\"technique\"\n          >\n            <label for=\"\" class=\"label\">Service Technique</label>\n            <div class=\"input\">\n              <input formControlName=\"fullName\" nbInput type=\"text\" />\n              <input formControlName=\"email\" nbInput type=\"text\" />\n              <input formControlName=\"phone\" nbInput type=\"text\" />\n            </div>\n          </div>\n          <div class=\"btns\">\n            <button\n              size=\"small\"\n              (click)=\"hideShowFormAchat()\"\n              [status]=\"toHideAchat ? 'success' : 'basic'\"\n              nbButton\n            >\n              Achat</button\n            ><button\n              size=\"small\"\n              nbButton\n              [status]=\"toHideFinancier ? 'success' : 'basic'\"\n              (click)=\"hideShowFormFinancier()\"\n            >\n              Financier</button\n            ><button\n              size=\"small\"\n              nbButton\n              [status]=\"toHideTechnique ? 'success' : 'basic'\"\n              (click)=\"hideShowFormTechnique()\"\n            >\n              Technicien\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr class=\"divider\" />\n\n      <div class=\"row\">\n        <div class=\"justify-btn\">\n          <button\n            status=\"success\"\n            [disabled]=\"addCompany.invalid\"\n            (click)=\"createCompany()\"\n            nbButton\n          >\n            Ajouter\n          </button>\n          <button status=\"danger\" (click)=\"addCompany.reset()\" nbButton>\n            Vider\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Apollo } from \"apollo-angular\";\nimport { TableClientService } from \"../table-client.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { NbDialogService, NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationModalComponent } from \"../../../share-data/confirmation-modal/confirmation-modal.component\";\n\n@Component({\n  selector: \"ngx-add-company\",\n  templateUrl: \"./add-company.component.html\",\n  styleUrls: [\"./add-company.component.scss\"],\n})\nexport class AddCompanyComponent implements OnInit {\n  addCompany = new FormGroup({\n    companyName: new FormControl(\"\", [Validators.required]),\n    address: new FormControl(\"\", [Validators.required]),\n    phone: new FormControl(\"\", [Validators.required]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    region: new FormControl(\"\", [Validators.required]),\n    codePostal: new FormControl(\"\", [Validators.required]),\n    tva: new FormControl(\"\", [Validators.required]),\n    localOrshore: new FormControl(\"\", [Validators.required]),\n    etat: new FormControl(\"\", [Validators.required]),\n    fax: new FormControl(\"\", [Validators.required]),\n    website: new FormControl(\"\", [Validators.required]),\n    conPayment: new FormControl(\"\", [Validators.required]),\n    techContact: new FormControl(\"\", [Validators.required]),\n    codeFiscal: new FormControl(\"\", [Validators.required]),\n    nattestation: new FormControl(\"\", [Validators.required]),\n    swiftBic: new FormControl(\"\", [Validators.required]),\n    ibanRib: new FormControl(\"\", [Validators.required]),\n    achat: new FormGroup({\n      // Nested FormGroup\n      fullName: new FormControl(\"\"),\n      email: new FormControl(\"\"),\n      phone: new FormControl(\"\"),\n    }),\n    financier: new FormGroup({\n      // Nested FormGroup\n      fullName: new FormControl(\"\"),\n      email: new FormControl(\"\"),\n      phone: new FormControl(\"\"),\n    }),\n    technique: new FormGroup({\n      // Nested FormGroup\n      fullName: new FormControl(\"\"),\n      email: new FormControl(\"\"),\n      phone: new FormControl(\"\"),\n    }),\n    nRegisterCommerce: new FormControl(\"\", [Validators.required]),\n  });\n  typeUser: string;\n  regions = [\n    \"Ariana\",\n    \"Béja\",\n    \"Ben Arous\",\n    \"Bizerte\",\n    \"Gabès\",\n    \"Gafsa\",\n    \"Jendouba\",\n    \"Kairaouan\",\n    \"Kasserine\",\n    \"Kebili\",\n    \"Kef\",\n    \"Mahdia\",\n    \"Manouba\",\n    \"Mednine\",\n    \"Monastir\",\n    \"Nabeul\",\n    \"Sfax\",\n    \"Sidi Bouzid\",\n    \"Siliana\",\n    \"Sousse\",\n    \"Tataouine\",\n    \"Tozeur\",\n    \"Tunis\",\n    \"Zaghouan\",\n  ];\n\n  toHideAchat: boolean = false;\n  toHideFinancier: boolean = false;\n  toHideTechnique: boolean = false;\n  constructor(\n    private apollo: Apollo,\n    private clientService: TableClientService,\n    private route: ActivatedRoute,\n    private toastr: NbToastrService,\n    private router: Router,\n    private nbDialog: NbDialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.typeUser = this.route.snapshot.params.type;\n    console.log(this.typeUser, \"data\");\n  }\n\n  createCompany() {\n    console.log(this.addCompany.value, \"add\");\n    this.nbDialog\n      .open(ConfirmationModalComponent, {\n        context: { data: \"êtes-vous sûr de ajouter cette société\" },\n      })\n      .onClose.subscribe((cl) => {\n        if (cl) {\n          console.log(this.addCompany.value, \"form data company\");\n          this.apollo\n            .mutate<any>({\n              mutation: this.clientService.addClient(\n                this.addCompany.value,\n                this.typeUser\n              ),\n            })\n            .subscribe(({ data }) => {\n              if (data) {\n                this.addCompany.reset();\n                this.toastr.success(\"\", \"Vous avez ajouter nouvelle société\");\n                this.router.navigate([\"pages/tableClient/table-company\"]);\n              }\n            });\n        } else {\n          this.toastr.danger(\"\", \"Annulé\");\n        }\n      });\n  }\n\n  hideShowFormAchat() {\n    this.toHideAchat = !this.toHideAchat;\n  }\n  hideShowFormFinancier() {\n    this.toHideFinancier = !this.toHideFinancier;\n  }\n  hideShowFormTechnique() {\n    this.toHideTechnique = !this.toHideTechnique;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"ngx-choices\",\n  templateUrl: \"./choices.component.html\",\n  styleUrls: [\"./choices.component.scss\"],\n})\nexport class ChoicesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onCreateNewClient() {\n    console.log(\"Client work\");\n  }\n  onCreateNewSociete() {\n    console.log(\"Societe work\");\n  }\n}\n","<nb-card class=\"row justify-card\">\n  <nb-card\n    [routerLink]=\"['/pages/tableClient/add-client', 'CLIENT']\"\n    size=\"medium\"\n    class=\"col-lg-4 animation\"\n    (click)=\"onCreateNewClient()\"\n  >\n    <div class=\"cardsocieteclient\">\n      <nb-icon\n        class=\"Icon\"\n        icon=\"people-outline\"\n        style=\"font-size: 10rem\"\n      ></nb-icon>\n      <h2 class=\"textunderheader\">Créer nouveau client</h2>\n    </div>\n  </nb-card>\n\n  <nb-card\n    size=\"medium\"\n    class=\"col-lg-4 animation\"\n    (click)=\"onCreateNewSociete()\"\n    [routerLink]=\"['/pages/tableClient/add-company', 'COMPANY']\"\n  >\n    <div class=\"cardsocieteclient\">\n      <nb-icon icon=\"home-outline\" style=\"font-size: 10rem\"></nb-icon>\n      <h2 class=\"textunderheader\">Créer nouvelle société</h2>\n    </div>\n  </nb-card>\n</nb-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { TableClientService } from \"../table-client.service\";\nimport { Apollo } from \"apollo-angular\";\n\n@Component({\n  selector: \"ngx-company-list\",\n  templateUrl: \"./company-list.component.html\",\n  styleUrls: [\"./company-list.component.scss\"],\n})\nexport class CompanyListComponent implements OnInit {\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n      custom: [\n        {\n          name: \"passValue\",\n          title: `<i class=\"nb-compose\" title=\"Affecte des TPEs\"></i>`,\n        },\n      ],\n    },\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"  title=\"Modifier\" ></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmSave: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"  title=\"Desactiver\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      _id: {\n        title: \"ID\",\n        type: \"string\",\n      },\n      companyName: {\n        title: \"Société\",\n        type: \"string\",\n      },\n\n      email: {\n        title: \"Lastname\",\n        type: \"string\",\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n      },\n      phone: {\n        title: \"Phone\",\n        type: \"string\",\n      },\n\n      type: {\n        title: \"Type\",\n        type: \"string\",\n      },\n    },\n  };\n  listOfCompany: LocalDataSource;\n\n  constructor(\n    private clientService: TableClientService,\n    private apollo: Apollo\n  ) {}\n\n  ngOnInit(): void {\n    this.getCompany();\n  }\n\n  getCompany() {\n    this.apollo\n      .query<any>({\n        query: this.clientService.getCompany(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data);\n        this.listOfCompany = new LocalDataSource(data.getAllCompany);\n      });\n  }\n}\n","<nb-card>\n  <nb-card-header></nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"listOfCompany\"\n    ></ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { AddClientComponent } from \"./add-client/add-client.component\";\r\nimport { TableClientComponent } from \"./table-client/table-client.component\";\r\nimport { ChoicesComponent } from \"./choices/choices.component\";\r\nimport { AddCompanyComponent } from \"./add-company/add-company.component\";\r\nimport { CompanyListComponent } from \"./company-list/company-list.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"choices\",\r\n    component: ChoicesComponent,\r\n  },\r\n  {\r\n    path: \"add-client/:type\",\r\n    component: AddClientComponent,\r\n  },\r\n  {\r\n    path: \"add-company/:type\",\r\n    component: AddCompanyComponent,\r\n  },\r\n  {\r\n    path: \"table-user\",\r\n    component: TableClientComponent,\r\n  },\r\n  {\r\n    path: \"table-company\",\r\n    component: CompanyListComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClientRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo } from \"apollo-angular\";\nimport { TableClientService } from \"../table-client.service\";\nimport { LocalDataSource } from \"ng2-smart-table\";\n\n@Component({\n  selector: \"ngx-table-client\",\n  templateUrl: \"./table-client.component.html\",\n  styleUrls: [\"./table-client.component.scss\"],\n})\nexport class TableClientComponent implements OnInit {\n  listOfClient: LocalDataSource;\n  constructor(\n    private apollo: Apollo,\n    private clientService: TableClientService\n  ) {}\n\n  ngOnInit(): void {\n    this.getClientCompany();\n  }\n\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n      custom: [\n        {\n          name: \"passValue\",\n          title: `<i class=\"nb-compose\" title=\"Affecte des TPEs\"></i>`,\n        },\n      ],\n    },\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"  title=\"Modifier\" ></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmSave: true,\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"  title=\"Desactiver\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      _id: {\n        title: \"ID\",\n        type: \"string\",\n      },\n      firstName: {\n        title: \"ID\",\n        type: \"string\",\n      },\n\n      lastName: {\n        title: \"Fistname\",\n        type: \"string\",\n      },\n      email: {\n        title: \"Lastname\",\n        type: \"string\",\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n      },\n      phone: {\n        title: \"Phone\",\n        type: \"string\",\n      },\n\n      type: {\n        title: \"Type\",\n        type: \"string\",\n      },\n    },\n  };\n\n  // onDeleteConfirm(event) {\n  //   console.log(\"Delete Event In Console\");\n  //   console.log(event);\n  //   if (window.confirm(\"Are you sure you want to delete?\")) {\n  //     event.confirm.resolve();\n  //   } else {\n  //     event.confirm.reject();\n  //   }\n  // }\n\n  // onCreateConfirm(event) {\n  //   console.log(\"Create Event In Console\");\n  //   console.log(event);\n  // }\n\n  // onSaveConfirm(event) {\n  //   console.log(\"Edit Event In Console\");\n  //   console.log(event);\n  // }\n\n  getClientCompany() {\n    this.apollo\n      .query<any>({\n        query: this.clientService.getClient(),\n      })\n      .subscribe(({ data }) => {\n        console.log(data);\n        this.listOfClient = new LocalDataSource(data.getAllClient);\n      });\n  }\n}\n","<nb-card>\n  <nb-card-header></nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"listOfClient\"\n    ></ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TableClientComponent } from \"./table-client/table-client.component\";\nimport { AddClientComponent } from \"./add-client/add-client.component\";\nimport { ClientRoutingModule } from \"./table-client-routing.module\";\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbStepperModule,\n} from \"@nebular/theme\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { ChoicesComponent } from \"./choices/choices.component\";\nimport { AddCompanyComponent } from \"./add-company/add-company.component\";\nimport { CompanyListComponent } from './company-list/company-list.component';\n\n@NgModule({\n  declarations: [\n    TableClientComponent,\n    AddClientComponent,\n    ChoicesComponent,\n    AddCompanyComponent,\n    CompanyListComponent,\n  ],\n  imports: [\n    CommonModule,\n    ClientRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    ReactiveFormsModule,\n    NbRadioModule,\n    NbButtonModule,\n    Ng2SmartTableModule,\n    NbIconModule,\n    NbSelectModule,\n  ],\n})\nexport class TableClietModule {}\n"]}